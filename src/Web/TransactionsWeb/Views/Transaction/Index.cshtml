@model PaginatedList<TransactionsWeb.Models.TransactionViewModels.Transaction>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        if(User.IsInRole("Assistant") || User.IsInRole("Admin"))
        { 
            <a asp-action="Create">Create New</a>
        }
    }
</p>
<form asp-controller="Transaction" asp-action="Index" method="post">
    <p>
        Fraude:  <input type="checkbox" name="Fraud" />
        Fecha:   <input type="date" name="TransactionDate" />
        Destino: <input type="text" name="destination" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    @*<thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.itemTransactionTypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ammount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NameOrig)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OldBalanceOrig)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NewBalanceOrig)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NameDest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OldBalanceDest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NewBalanceDest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsFraud)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tr)
            </th>
            <th></th>
        </tr>
    </thead>*@
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionTypeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ammount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NameOrig)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OldBalanceOrig)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewBalanceOrig)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NameDest)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OldBalanceDest)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewBalanceDest)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsFraud)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionDate)
                </td>
                <td>
                    @if(User.IsInRole("Manager") || User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Validar</a> 
                    }
                    | <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>